# THIS IS PERL FILE! USE CORRECT SYNTAX
#
use strict;
our ( %svc, %config );

#copy this file to watchmen.conf and edit
#cp watchmen.conf.dist watchmen.conf
#
# print("watchdog disabled from watchmen.conf!\n"); exit;
#
# $config{log_all}=1; # full logging
#
#Disable wathing all default system services:
#%svc = ();
#
#define your service:
#$svc{snmpd} = n(); #correct order, process named "snmpd", correct [/usr/local]/etc/rc.d/snmpd
#or
#$svc{named} = {
# Your custom check, example:
#  check=>sub {   for(`nslookup ya.ru $svc{named}{host}`) {return undef if /213.180.204.8|77.88.21.8|93.158.134.8/} return 'restart' "}
#};
#
#or with alternate ../rc.d/filename
#$svc{icecast} = n(rcdname=>'icecast2');
#or alternate process name
#$svc{apache22} = n( process => 'httpd' );
#... name in rc.conf
#$svc{nmbd} = n( rcdname => 'samba', rcconfname => 'samba' );
#
#.. or add parametrs to default:
#restart mysqld if memory usage > 2g
#$svc{mysql}{max}{VSZ} = $svc{mysql}{max}{RSS} = 2_000_000;
#or
#%{$svc{mysql}} = (%{$svc{mysql}}, max=>{map {$_=>2_000_000} qw(VSZ RSS)});
#
#kill via pid:
#chomp(my $hostname = `/bin/hostname`);
#$svc{mysql}{pidfile} = "/var/db/mysql/$hostname.pid";
#
#check port, code than custom content:
#$svc{apache22}{http_check}='<html';
#%{$svc{nginx}} = (%{$svc{nginx}}, http_check=>'<html' );
#have no rc.conf vars, no restart:
#$svc{communigate} = n(rcdname => 'CommuniGate.sh', process => 'CGServer', enable => 1, restart=>0);
#
#group your services for bulk actions
#unless ($config{config_run}) { watchmen::pushex $svc{$_}{group}, 'web' for qw(apache22 apache2 apache nginx mysql memcached redis postgresql sphinxsearch); }
#and use   watchmen keep=web   or   watchmen stop=web
#
#$svc{VeryComplexService} = n(
#  enable      => 1,
#  'sleep'      => 30, # in restart sleep betwen start and stop (this service have very slow shutdown)
#  restart      => 0, #no restart action in rc.d, using start..stop
#  process      => 'VeryComplexService.20090209-1', #look in ps
#  rcdname      => 'VeryComplexService.6234',
#  tcp          => 6234, # try tcp connect port                   <--+
#  http_host    => '723.542.718.592', # ip (if service bind to)      |
#  http         => 8890, # try http connect port (can be other than tcp)
#  http_method  => 'POST',
#  http_path    => '/upload?login=VeryComplex&password=VeryComplexpassword',
#  http_headers => { 'Content-Type' => 'application/x-www-form-urlencoded' },
#  http_content => 'data=VeryComplexTest',
#  http_code    => 200, # we want THIS code
#  http_check   => 'VeryComplexAnswer', # we want find it in recieve data
#  check        => sub { return 'restart' if 42+1 == 13 }, # any your check here
#);
#
# $svc{moused}  = n( no_stop => 1, ); # [tmp] must look at -e moused_port="/dev/psm0"
# $svc{sendmail_submit} = n( process    => 'sendmail', rcdname => 'sendmail', tcp => 25 ); # cant correctly parse with sendmail_enable="NONE"
#

#useful:
# $svc{wpa_supplicant} = n( start_params=>'em0', enable => 1, ); # if autodetect fail

#database dbi query test (requires DBD::mysql module)
#$svc{mysql}{dbi} = 'mysql';
#optional:
#$svc{mysql}{database} = 'mysql';
#$svc{mysql}{db_query_time_max} = 10;
#$svc{mysql}{db_query}  = ['2+1', '4+4', '42'];
#$svc{mysql}{db_answer} = ['3',   '8',   '42'];
#$svc{mysql}{db_query}  = '* from user limit 10';
#$svc{mysql}{db_query_min} = 5;
#$svc{mysql}{db_query}  = 'count(*) from user';
#$svc{mysql}{db_answer_true} = 1;

=custom query test (try with --log_all)
$svc{mysql}{check} = sub {
    if ( $_[0]->{dbh} ) {
        my $q = '42';
        my $sth = $_[0]->{dbh}->prepare("SELECT $q") || return 'restart';
        $sth->execute;
        while ( my $ref = $sth->fetchrow_hashref() ) {
            printlog 'info', 'db answer', Dumper $ref;
            return undef if $ref->{$q} eq $q;
            printlog( 'warn', 'strange answer', Dumper $ref);
        }
    }
};
=cut

#$svc{postgresql}{dbi} = 'Pg';    # DBD::Pg      select installed dbi driver
##$svc{postgresql}{dbi} = 'PgPP'; # DBD::PgPP
#$svc{postgresql}{user} = 'pgsql';
#$svc{postgresql}{dbname} = 'template1';

#$config{default}{mail} = 'root@localhost'; #report any problem, multi emails in [] supported
#$svc{mysql}{mail}= [qw( larry_ellison@oracle.com steeve_jlobs@apple.com )]; # report one service problems
#$config{'mail_from'} = 'bill_gates@microsoft.com';

#$svc{sphinxsearch}{tcp} =  9306;
#$svc{sphinxsearch}{restart} = $config{restart_hard};

1;
